import time

import telebot
from selenium.webdriver.common.keys import Keys
from selenium import webdriver
from telebot import types # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
from selenium.webdriver.common.by import By
from fake_useragent import UserAgent



useragent = UserAgent()

options = webdriver.ChromeOptions()

# —É–±–∏—Ä–∞–µ—Ç –Ω–∞–¥–ø–∏—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–æ–µ–≤–æ–µ –ü–û
options.add_experimental_option("excludeSwitches", ['enable-automation'])

# –∏–∑–º–µ–Ω—è–µ—Ç –º–æ–π —é–∑–µ—Ä –∞–≥–µ–Ω—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–∞–Ω–¥–æ–º–∞ –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
options.add_argument(f'user-agent={useragent.random}')
browser = webdriver.Chrome(options = options)

browser.get('https://wordstat.yandex.ru/')
URL = browser.get('https://wordstat.yandex.ru/')


# –∞—É–Ω—Ç–µ—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
API_KEY = '5465489989:AAGMpca8ww7GmlcF2ofDxFLO_qTZtliUUpM'


bot = telebot.TeleBot(API_KEY)


@bot.message_handler(commands=['start'])
# def start(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     btn1 = types.KeyboardButton("‚úè –í–≤–µ—Å—Ç–∏ –ª–æ–≥–∏–Ω")
#     btn2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
#     markup.add(btn1, btn2)
#     bot.send_message(message.chat.id, text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π {0.first_name}! –ú—ã —Å–¥–µ–ª–∞–ª–∏ —ç—Ç–æ—Ç –±–æ—Ç –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –º–æ–≥ –±–µ–∑ —Ç—Ä—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ Yandex WordStat. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Yandex".format(message.from_user), reply_markup=markup)
#
# @bot.message_handler(content_types=['text'])
# def func(message):
#     if(message.text == "‚úè –í–≤–µ—Å—Ç–∏ –ª–æ–≥–∏–Ω"):
#         msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω –æ—Ç —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Yandex", reply_markup=types.ReplyKeyboardRemove())
#         bot.register_next_step_handler(msg, login)
#     elif(message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
#         bot.send_message(message.chat.id, text="–û —á–µ–º –ø–æ–≥–æ–≤–æ—Ä–∏–º?", reply_markup=types.ReplyKeyboardRemove())
#         # bot.register_next_step_handler(comm, login, ) –ó–¥–µ—Å—å –Ω–∞–¥–æ –¥–æ–ø–∏–ª–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ –±–¥ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ
#
# def login(message):
#     browser.find_element(By.XPATH, '/html/body/div[1]/table/tbody/tr/td[6]/table/tbody/tr[1]/td[2]/a/span').click()
#     email_input = browser.find_element(By.ID, 'b-domik_popup-username')
#     email_input.clear()
#     email_input.send_keys(message.text)
#     msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å. –í–≤–µ–¥—è —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –≤–∞–º–∏. –í —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –º—ã –æ–±–µ—â–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–µ—Ä–≤–∏—Å –∏ –Ω–µ –±—É–¥–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.")
#     bot.register_next_step_handler(msg, password)
#
#
#
# def password(message):
#     browser.find_element(By.XPATH, '/html/body/div[1]/table/tbody/tr/td[6]/table/tbody/tr[1]/td[2]/a/span').click()
#     passwor_input = browser.find_element(By.ID,'b-domik_popup-password')
#     passwor_input.clear()
#     passwor_input.send_keys(message.text)
#     passwor_input.send_keys(Keys.ENTER)
#     # –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–≤–æ–¥–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è –∏ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –∫ –ø–æ—Å–ª–µ–¥–Ω–∏–º 2 —Å—Ç—Ä–æ—á–∫–∞–º —Ñ—É–Ω–∫—Ü–∏–∏ login
#
# @bot.message_handler(content_types=['text'])
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üîç –ü–æ —Å–ª–æ–≤–∞–º")
    btn2 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "üîç –ü–æ —Å–ª–æ–≤–∞–º"):
        otvet = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(otvet, search)

    elif (message.text == "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ü–æ —Ä–µ–≥–∏–æ–Ω–∞–º")
        btn2 = types.KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤")
        btn3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–≥–∏–æ–Ω–∞")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        markup.add(btn1, btn2, btn3, back)
        bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç", reply_markup=markup)

# @bot.message_handler(content_types=['text'])
#     if (message.text == "–ü–æ —Ä–µ–≥–∏–æ–Ω–∞–º"):
# #         –ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —Ä–µ–≥–∏–æ–Ω–æ–≤
#     elif (message.text == "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤"):
#         # –ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫ –ø–æ–∏—Å–∫—É –ø–æ –∏—Å—Ç–æ—Ä–∏–∏
#     elif (message.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–≥–∏–æ–Ω–∞"):
#         # –ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–µ–≥–∏–æ–Ω–∞
#     elif (message.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–≥–∏–æ–Ω–∞"):
#         bot.register_next_step_handler(menu)
#
def search(message):
    driver = browser.find_element(By.CLASS_NAME, 'b-form-input__input')
    driver.clear()
    driver.send_keys(message.text)
    time.sleep(3)
    driver.send_keys(Keys.ENTER)
    time.sleep(3)
    blocks = browser.find_element(By.CLASS_NAME,'b-word-statistics__table')
    all_blocks = blocks.find_elements(By.CSS_SELECTOR, 'td[class*="b-word-statistics__td"]')
    for i in (all_blocks)[:6]:
        bot.send_message(message.chat.id, i.text)


bot.polling()
